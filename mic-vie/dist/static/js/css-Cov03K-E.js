import{p as e}from"./postcss-Cz0Oouzh.js";function t(t,o){return new Promise(((s,a)=>{const n=t+o,r=e.parse(n);e([{postcssPlugin:"merge-same-class-styles",Once:function(t){const o={};t.walkRules((e=>{const t=e.selector,s=e.nodes;o[t]?s.forEach((e=>{const s=e.prop,a=e.value,n=e.important;if(o[t][s])if(n||!o[t][s].important)o[t][s]={value:a,important:n};else{const e=o[t][s].value;e!==a&&parseInt(a,10)>parseInt(e,10)&&(o[t][s]={value:a,important:n})}else o[t][s]={value:a,important:n}})):(o[t]={},s.forEach((e=>{const s=e.prop,a=e.value,n=e.important;o[t][s]={value:a,important:n}})))})),t.removeAll(),Object.keys(o).forEach((s=>{const a=e.rule({selector:s});Object.keys(o[s]).forEach((t=>{const{value:n,important:r}=o[s][t],c=e.decl({prop:t,value:n});r&&(c.important=!0),a.append(c)})),t.append(a)}))}}]).process(r,{from:void 0}).then((e=>{const t=e.css;s(t)})).catch((e=>{}))}))}export{t as m};
