function e(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function t(t){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?e(Object(o),!0).forEach((function(e){r(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):e(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function r(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t);if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}const n=function e(r){return n.withOptions=n=>e(t(t({},r),n)),n;function n(e,...t){const n="string"==typeof e?[e]:e.raw,{escapeSpecialCharacters:o=Array.isArray(e)}=r;let i="";for(let r=0;r<n.length;r++){let e=n[r];o&&(e=e.replace(/\\\n[ \t]*/g,"").replace(/\\`/g,"`").replace(/\\\$/g,"$").replace(/\\\{/g,"{")),i+=e,r<t.length&&(i+=t[r])}const c=i.split("\n");let l=null;for(const r of c){const e=r.match(/^(\s+)\S+/);if(e){const t=e[1].length;l=l?Math.min(l,t):t}}if(null!==l){const e=l;i=c.map((t=>" "===t[0]||"\t"===t[0]?t.slice(e):t)).join("\n")}return i=i.trim(),o&&(i=i.replace(/\\n/g,"\n")),i}}({}),o=n;export{o as d};
